---
# Removes the AWS Docker VPC infrastructure


- hosts: localhost
  tasks:
  - name: get Configuration
    include_vars: file=config.yml name=config
  - debug: var=config

#  - name: Stop ECS task
#    ecs_task:
#      operation: stop
#      region: "{{ config.aws_region }}"
#      cluster: "{{ config.app_name }}-ecs"
#      task: 

  - name: Stop ECS cluster instances
    ec2_instance:
      state: stopped
      region: "{{ config.aws_region }}"
      filters:
        "tag:Name": "{{config.app_name}}-{{item.name_suffix}}"
    with_items: "{{ config.ecs_containers }}"
    ignore_errors: yes

  - name: Remove ECS cluster instances
    ec2_instance:
      state: absent
      region: "{{ config.aws_region }}"
      filters:
        "tag:Name": "{{config.app_name}}-{{item.name_suffix}}"
    with_items: "{{ config.ecs_containers }}"
    ignore_errors: yes


  - name: ECS Service to zero instances
    ecs_service:
      state: present
      name: "{{config.app_name}}-service"
      region: "{{ config.aws_region }}"
      cluster: "{{ config.app_name }}-ecs"
      desired_count: 0
      task_definition: "{{config.app_name}}-task"
    ignore_errors: yes

  - name: Remove ECS Service
    ecs_service:
      state: absent
      name: "{{config.app_name}}-service"
      region: "{{ config.aws_region }}"
      cluster: "{{ config.app_name }}-ecs"
    ignore_errors: yes

  - name: Remove container image repository (ECR)
    ecs_ecr:
      state: absent
      region: "{{ config.aws_region }}"
      name:  "{{ config.app_name }}-ecr"
    ignore_errors: yes

  - name: Remove ECS cluster
    ecs_cluster:
      state: absent
      region: "{{ config.aws_region }}"
      name: "{{ config.app_name }}-ecs"
      delay: 10
      repeat: 30
    register: ecs_cluster
    ignore_errors: yes

  - name: Remove ECS role
    iam_role: 
      name: "{{config.app_name}}-ecsServiceRole" 
      state: absent
    ignore_errors: yes

  - name: Remove VPC
    include_role:
      name: aws-vpc
    vars:
      vpc_state: absent
      prefix: "arsnova"
      aws_region: "{{config.aws_region}}"
      vpc_cidr_block: "{{ config.vpc_cidr_block }}"
